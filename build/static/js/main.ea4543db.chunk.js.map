{"version":3,"sources":["config.js","requests.js","axios.js","Components/Row.js","Components/Banner.js","Jefflix.png","Components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","requests","fetchTrending","fetchTopRated","fetchPopular","fetchPopularTV","fetchAction","fetchComedy","fetchHorror","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","results","data","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","setMovie","randomMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","setShow","window","addEventListener","scrollY","removeEventListener","logo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea4543db.chunk.js","sourcesContent":["const apiKey = '36b04fd5a0f9107fcb4eb0c2da994bd5';\n\nexport default apiKey;\n","import apiKey from './config'\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${apiKey}&language=en-US`,\n    fetchTopRated: `movie/top_rated?api_key=${apiKey}&language=en-US`,\n    // fetchLatest: `/movie/latest?api_key=${apiKey}&language=en-US`,\n    fetchPopular: `/movie/popular?api_key=${apiKey}&language=en-US&page=1`,\n    fetchPopularTV: `/tv/popular?api_key=${apiKey}&language=en-US&page=1`,\n    fetchAction: ``,\n    fetchComedy: ``,\n    fetchHorror: ``\n}\n\nexport default requests","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: 'https://api.themoviedb.org/3',\n});\n\nexport default instance;\n","import React, { useState, useEffect } from 'react';\nimport axios from '../axios';\nimport './Row.css';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\nconst imgBaseUrl = 'https://image.tmdb.org/t/p/original/';\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n\tconst [movies, setMovies] = useState([]);\n\tconst [trailerUrl, setTrailerUrl] = useState();\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst request = await axios.get(fetchUrl);\n\t\t\tconst { results } = request.data;\n\t\t\tsetMovies(results);\n\t\t}\n\n\t\tfetchData();\n\t}, [fetchUrl]);\n\n\t//console.log(movies)\n\n\tconst opts = {\n\t\theight: '390',\n\t\twidth: '100%',\n\t\tplayerVars: {\n\t\t\tautoplay: 1,\n\t\t},\n\t};\n\n\tconst handleClick = (movie) => {\n\t\tif (trailerUrl) {\n\t\t\tsetTrailerUrl('');\n\t\t} else {\n\t\t\tmovieTrailer(movie?.name || movie?.title || '')\n\t\t\t\t.then((url) => {\n\t\t\t\t\tconst urlParams = new URLSearchParams(new URL(url).search);\n\t\t\t\t\tsetTrailerUrl(urlParams.get('v'));\n\t\t\t\t})\n\t\t\t\t.catch((error) => console.log(error));\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<h2>{title}</h2>\n\t\t\t<div className=\"row-posters\">\n\t\t\t\t{movies.map((movie) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tonClick={() => handleClick(movie)}\n\t\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\t\tclassName={`row-poster ${\n\t\t\t\t\t\t\t\tisLargeRow && 'row-poster-large'\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\tsrc={`${imgBaseUrl}${\n\t\t\t\t\t\t\t\tisLargeRow\n\t\t\t\t\t\t\t\t\t? movie.poster_path\n\t\t\t\t\t\t\t\t\t: movie.backdrop_path\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\talt={movie.title}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t{trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n\t\t</div>\n\t);\n}\n\nexport default Row;\n","import React, { useState, useEffect } from 'react';\nimport axios from '../axios';\nimport requests from '../requests';\nimport './Banner.css';\n\nfunction Banner() {\n\tconst [movie, setMovie] = useState([]);\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst request = await axios.get(requests.fetchPopular);\n\t\t\tconst { results } = request.data;\n\t\t\tconst randomMovie =\n\t\t\t\tresults[Math.floor(Math.random() * results.length - 1)];\n\t\t\tsetMovie(randomMovie);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\t//console.log(movie)\n\n\tfunction truncate(str, n) {\n\t\treturn str?.length > n ? str.substr(0, n - 1) + '...' : str;\n\t}\n\n\treturn (\n\t\t<header\n\t\t\tclassName=\"banner\"\n\t\t\tstyle={{\n\t\t\t\tbackgroundSize: 'cover',\n\t\t\t\tbackgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n\t\t\t\tbackgroundPosition: 'center center',\n\t\t\t}}\n\t\t>\n\t\t\t<div className=\"banner-contents\">\n\t\t\t\t<h1 className=\"banner-title\">\n\t\t\t\t\t{movie?.title || movie?.name || movie?.original_name}\n\t\t\t\t</h1>\n\n\t\t\t\t<div className=\"banner-buttons\">\n\t\t\t\t\t<button className=\"banner-button\">Play</button>\n\t\t\t\t\t<button className=\"banner-button\">My List</button>\n\t\t\t\t</div>\n\n\t\t\t\t<h1 className=\"banner-description\">\n\t\t\t\t\t{truncate(movie?.overview, 150)}\n\t\t\t\t</h1>\n\t\t\t</div>\n\t\t\t<div className=\"fade-bottom\" />\n\t\t</header>\n\t);\n}\n\nexport default Banner;\n","export default __webpack_public_path__ + \"static/media/Jefflix.55c8baeb.png\";","import React, { useState, useEffect } from 'react';\nimport './Nav.css';\nimport logo from '../Jefflix.png'\n\nfunction Nav() {\n\tconst [show, setShow] = useState();\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('scroll', () => {\n\t\t\tif (window.scrollY > 100) {\n\t\t\t\tsetShow(true);\n\t\t\t} else {\n\t\t\t\tsetShow(false);\n\t\t\t}\n\t\t\treturn () => {\n\t\t\t\twindow.removeEventListener('scroll');\n\t\t\t};\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className={`nav ${show && 'nav-black'}`}>\n\t\t\t<img src={logo} alt=\"Jefflix logo\" className=\"nav-logo\" />\n\t\t\t<img\n\t\t\t\tsrc=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\n\t\t\t\talt=\"Avatar\"\n\t\t\t\tclassName=\"nav-avatar\"\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Nav;\n","import './App.css';\nimport requests from './requests';\nimport Row from './Components/Row';\nimport Banner from './Components/Banner';\nimport Nav from './Components/Nav';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Nav />\n\t\t\t<Banner />\n\t\t\t<Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} isLargeRow />\n\t\t\t<Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n\t\t\t<Row title=\"Popular Movies\" fetchUrl={requests.fetchPopular} />\n\t\t\t<Row title=\"Popular TV Shows\" fetchUrl={requests.fetchPopularTV} />\n\t\t\t{/* <Row title='Latest Movies' fetchUrl={requests.fetchLatest} /> */}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}